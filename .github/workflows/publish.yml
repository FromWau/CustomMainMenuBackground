name: Publish package

on:
  release:
    types: [published]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v3
       - name: Get clean version
         run: |
            echo cleanVersion=$(echo ${{github.ref_name}} | sed s/v//g) >> $GITHUB_ENV
       - name: Check that version matches
         run: |
            if [[ "$(cat ${{ github.workspace }}/mod.json | jq -r .Version)" != "${{ env.cleanVersion }}" ]]; then
              echo "::debug::${{env.cleanVersion}}"
              echo "::debug::$(cat ${{ github.workspace }}/mod.json)"
              echo "::error::Version in mod.json does not match tag version"
              exit 1
            fi
  publish:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - uses: actions/checkout@v3
      - name: Get name
        run: |
          echo name=$(cat ${{ github.workspace }}/mod.json | jq -r .Name) >> $GITHUB_ENV
      - name: Get clean version
        run: |
          echo cleanVersion=$(echo ${{github.ref_name}} | sed s/v//g) >> $GITHUB_ENV      
      - name: Get Description
        run: |
          echo description=$(cat ${{ github.workspace }}/mod.json | jq -r .Description) >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - run: |
          cat ${{ github.workspace }}/compressed/assets.tar.gz.* > ${{ github.workspace }}/compressed/assets.tar.gz # concat assets
          tar -xvf ${{ github.workspace }}/compressed/assets.tar.gz # extract concatinated assets
          rm -f ${{ github.workspace }}/compressed/assets.tar.gz* # delete assets
          rm *.sh # Delete the asset splitting scripts
      - name: Upload Thunderstore Package
        uses: GreenTF/upload-thunderstore-package@v4
        with:
          community: northstar
          namespace: ${{ github.repository_owner }}
          name: ${{ env.name }}
          version: ${{ env.cleanVersion }}
          description: ${{ env.description }}
          token: ${{ secrets.TS_KEY }} 
          wrap: mods/${{ github.repository_owner }}.${{ env.name }} # This will wrap your Author.ModName folder in a mods/ folder before publishing
